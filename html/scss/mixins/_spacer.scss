/*
*
@ Sources: http://aslanbakan.com/en/blog/less-space-responsive-css-margin-and-padding-helper-classes/

@@ Changed the variables "$value to $space-value"  and "$breakpoints to $space-breakpoints"
@@ because the variables name conflicted to include-media.scss file.
*
*/

// change to false if its not imported into bootstrap
$use-bootstrap: false;

// margin and padding values array
$space-values : (
        0,
        10,
        15,
        20,
        25,
        30,
        40,
        45,
        50,
        60,
        70,
        80,
        100
) !default;

// margin and padding shorthands
$space-prefixes : (
        p  : padding,
        pt : padding-top,
        pr : padding-right,
        pb : padding-bottom,
        pl : padding-left,
        m  : margin,
        mt : margin-top,
        mr : margin-right,
        mb : margin-bottom,
        ml : margin-left,
) !default;

// change these values if its not imported into bootstrap
$grid-breakpoints-custom: (
  // Extra small screen / phone
        xs: 0,
  // Small screen / phone
        sm: 480px,
  // Medium screen / tablet
        md: 768px,
  // Large screen / desktop
        lg: 960px,
  // Extra large screen / wide desktop
        xl: 1280px
) !default;

$space-breakpoints : $grid-breakpoints-custom;
@if $use-bootstrap {
  $space-breakpoints : $grid-breakpoints;
}




// main function definition
@mixin make-space($space-values, $prefixes, $space-breakpoints) {
  @each $breakpoint-name, $breakpoint-value in $space-breakpoints {
    // if xs value = 0, set it global without media queries
    @if($breakpoint-value == 0) {
      @each $attr-short, $attr-long in $prefixes {
        @each $value in $space-values {
          .#{$breakpoint-name}-#{$attr-short}-#{$value} {
            #{$attr-long}: #{$value}px !important;
          }
        }
      }
    }
      // breakpoint values that not equal to 0
    @else {
      @media screen and (min-width: $breakpoint-value) {
        @each $attr-short, $attr-long in $prefixes {
          @each $value in $space-values {
            .#{$breakpoint-name}-#{$attr-short}-#{$value} {
              #{$attr-long}: #{$value}px !important;
            }
          }
        }
      }
    }
  }
}

@include make-space($space-values, $space-prefixes, $space-breakpoints);




